function(make_include_asset input_file output_file)
    if (NOT EXISTS ${output_file})
        message("-- Generating header asset: ${input_file} -> ${output_file}")
        file(READ ${input_file} content HEX)
        string(REGEX MATCHALL "([A-Za-z0-9][A-Za-z0-9])" matched "${content}")
        list(JOIN matched ",0x" result)
        string(PREPEND result "0x")
        file(WRITE ${output_file} "${result}")
    endif()
endfunction(make_include_asset)

set(header_dir ${CMAKE_CURRENT_BINARY_DIR}/include/zs/assets)
file(MAKE_DIRECTORY ${header_dir})
message("-- Header asset output directory: ${header_dir}")
file(GLOB files LIST_DIRECTORIES FALSE CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/assets/*)
foreach (file ${files})
    get_filename_component(name ${file} NAME)
    make_include_asset(${file} ${header_dir}/${name}.inl)
endforeach()

add_library(zs.assets INTERFACE)
target_include_directories(zs.assets INTERFACE ${CMAKE_CURRENT_BINARY_DIR}/include)
