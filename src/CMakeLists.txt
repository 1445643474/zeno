add_library(zeno OBJECT)
target_include_directories(zeno PUBLIC .)
target_include_directories(zeno PUBLIC zeno/legacy)

target_link_libraries(zeno PUBLIC spdlog)

file(GLOB_RECURSE source CONFIGURE_DEPENDS *.h *.cpp)
target_sources(zeno PRIVATE ${source})

if (COMPUTECPP_BITCODE)
    message("-- Using ComputeCpp for SYCL with target: ${COMPUTECPP_BITCODE}")
    find_package(ComputeCpp REQUIRED)
    file(GLOB_RECURSE sycl_source CONFIGURE_DEPENDS *.cpp)
    add_sycl_to_target(TARGET zeno SOURCES ${sycl_source})
    target_compile_definitions(zeno PUBLIC -DZENO_WITH_SYCL)
    target_link_libraries(zeno PRIVATE ComputeCpp::ComputeCpp)
elseif (SYCL_TARGETS)
    message("-- Using Clang for SYCL with target(s): ${SYCL_TARGETS}")
    get_filename_component(rpath "${CMAKE_CXX_COMPILER}" PATH)
    set(rpath "${rpath}/../lib")
    target_compile_options(zeno PUBLIC "-Wl,-rpath=${rpath} -std=c++17 -fsycl -fsycl-targets=${SYCL_TARGETS}")
else()
    message(FATAL_ERROR "-- No SYCL backend specified")
endif()
