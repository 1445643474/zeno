add_library(zeno OBJECT)
target_include_directories(zeno PUBLIC .)
target_include_directories(zeno PUBLIC zeno/legacy)

target_link_libraries(zeno PUBLIC spdlog)

file(GLOB_RECURSE source CONFIGURE_DEPENDS *.h *.cpp)
target_sources(zeno PRIVATE ${source})

if (COMPUTECPP_BITCODE)
    message("-- Using ComputeCpp for SYCL with target: ${COMPUTECPP_BITCODE}")
    find_package(ComputeCpp REQUIRED)
    file(GLOB_RECURSE sycl_source CONFIGURE_DEPENDS *.cpp)
    add_sycl_to_target(TARGET zeno SOURCES ${sycl_source})
    target_link_libraries(zeno PRIVATE ComputeCpp::ComputeCpp)
    target_compile_definitions(zeno PUBLIC -DZENO_WITH_SYCL)
elseif (SYCL_TARGETS)
    message("-- Using Clang for SYCL with target(s): ${SYCL_TARGETS}")
    get_filename_component(syclroot "${CMAKE_CXX_COMPILER}" PATH)
    get_filename_component(syclroot "${syclroot}" PATH)
    message("-- SYCL Compiler root at: [${syclroot}]")
    target_compile_options(zeno PUBLIC "-Wl,-rpath=${syclroot}/lib -std=c++17 -fsycl -fsycl-targets=${SYCL_TARGETS}")
    target_include_directories(zeno PUBLIC "${syclroot}/include")
    target_include_directories(zeno PUBLIC "${syclroot}/include/sycl")
    target_compile_definitions(zeno PUBLIC -DZENO_WITH_SYCL)
else()
    message("-- No SYCL backend specified, using host emulated SYCL")
endif()
