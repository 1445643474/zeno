cmake_minimum_required(VERSION 3.12)
project(zeno LANGUAGES C CXX)

if (NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

include_directories(include)

add_subdirectory(external/pybind11)
add_subdirectory(external/glad)
add_subdirectory(zenvis)


file(GLOB ZENO_SOURCE zeno/*.cpp zeno/nodes/*.cpp zeno/nodes/*/*.cpp zeno/include/*/*.h)

add_library(zeno SHARED ${ZENO_SOURCE})
target_compile_definitions(zeno PRIVATE -DDLL_ZENO)
target_include_directories(zeno PUBLIC zeno/include)
set(OUTPUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/zeno/lib)
set_target_properties(zeno PROPERTIES
	LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	)

pybind11_add_module(libzenpy libzenpy.cpp)
target_link_libraries(libzenpy PRIVATE zeno)
set(OUTPUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/zeno)
set_target_properties(libzenpy PROPERTIES
	LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR}
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}
	)

option(ZENO_BUILD_EXTENSIONS "Build extensions for Zeno" ON)
if (ZENO_BUILD_EXTENSIONS)
    add_subdirectory(projects)
endif()

option(ZENO_BUILD_TESTS "Build tests for Zeno" ON)
if (ZENO_BUILD_TESTS)
    add_subdirectory(tests)
endif()
