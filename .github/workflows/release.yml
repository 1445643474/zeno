name: Release

on:
  #push:
  #  tags:
  #    - 'v*'
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        include:
        #- os: ubuntu-latest  # TODO: use containers for linux release
        #  python: 3.8
        #  container: archibate/zeno_build:latest
        #  options: -DEXTENSION_zenvdb:BOOL=ON -DEXTENSION_FastFLIP:BOOL=ON -DZENOFX_ENABLE_OPENVDB:BOOL=ON
        - os: ubuntu-20.04
          python: 3.7
          packaging: linux
        - os: windows-latest
          python: 3.9
          packaging: win

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DZENO_BUILD_TESTS:BOOL=ON ${{matrix.options}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Test Import ZENO DLLs
      run: python -c "import zenqt.system.dll"

    - name: Install Python Packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install pybind11 numpy PySide2 pyinstaller

    - name: Packaging via PyInstaller
      run: python -m PyInstaller scripts/launcher_${{matrix.packaging}}.spec

    - name: Compress Package into ZIP
      run: python scripts/makezip.py

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automatically Released by GitHub Actions
        draft: true
        prerelease: false

    - name: Upload Release Asset
      if: ${{ matrix.packaging }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/launcher.zip
        asset_name: zeno-${{ github.ref }}-${{ matrix.packaging }}
        asset_content_type: application/zip
