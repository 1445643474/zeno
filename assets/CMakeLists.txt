function(make_include_asset input_file output_file)
    if (NOT EXISTS ${output_file})
        message("*** Generating header asset: ${input_file} -> ${output_file}")
        file(READ ${input_file} content)
        set(delim "for_c++_include")
        set(content "R\"${delim}(${content})${delim}\"")
        file(WRITE ${output_file} "${content}")
    endif()
endfunction(make_include_asset)

set(header_dir ${CMAKE_CURRENT_BINARY_DIR}/include/zeno2/assets)
file(MAKE_DIRECTORY ${header_dir})
message("*** Header asset output directory: ${header_dir}")
file(GLOB files LIST_DIRECTORIES FALSE CONFIGURE_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/assets/*)
foreach (file ${files})
    get_filename_component(name ${file} NAME)
    make_include_asset(${file} ${header_dir}/${name}.h)
endforeach()

add_library(zeno.assets INTERFACE)
target_include_directories(zeno.assets INTERFACE ${CMAKE_CURRENT_BINARY_DIR}/include)